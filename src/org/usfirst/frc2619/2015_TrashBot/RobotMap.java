// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2619.2015_TrashBot;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.can.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Gyro driveTrainDriveGyro;
    public static DoubleSolenoid brakeSolenoid1;
    public static Compressor compressor1AirCompressor;
    public static SpeedController liftSpeedController;
    public static Encoder liftEncoder;
    public static DoubleSolenoid armsLeftArm;
    public static DoubleSolenoid armsRightArm;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainDriveGyro = new Gyro(0);
        LiveWindow.addSensor("DriveTrain", "DriveGyro", driveTrainDriveGyro);
        driveTrainDriveGyro.setSensitivity(0.007);
        brakeSolenoid1 = new DoubleSolenoid(0, 0, 1);      
        LiveWindow.addActuator("Brake", "Solenoid1", brakeSolenoid1);
        
        compressor1AirCompressor = new Compressor(1);
        
        
        liftSpeedController = new TalonSRX(0);
        LiveWindow.addActuator("Lift", "SpeedController", (TalonSRX) liftSpeedController);
        
        liftEncoder = new Encoder(0, 1, false, EncodingType.k4X);
        LiveWindow.addSensor("Lift", "Encoder", liftEncoder);
        liftEncoder.setDistancePerPulse(1.0);
        liftEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        armsLeftArm = new DoubleSolenoid(0, 2, 3);      
        LiveWindow.addActuator("Arms", "LeftArm", armsLeftArm);
        
        armsRightArm = new DoubleSolenoid(0, 4, 5);      
        LiveWindow.addActuator("Arms", "RightArm", armsRightArm);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
