// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#ifndef WINCHSYSTEM_H
#define WINCHSYSTEM_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class WinchSystem: public Subsystem {
private:
	// It's desirable that everything possible under private except
	// for methods that implement subsystem capabilities
public:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	SpeedController* winchMotor;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	int Winch_Position; //H = 0, M = 1, L = 2

	WinchSystem();
	void InitDefaultCommand();
	void WinchOut();
	void WinchIn();
	void PutDashboardValues();

	// Constants for the Smart Dashboard
	const std::string WINCH_IN_SPEED_STRING = "WinchSystem::Winch In Speed ";
	const float WINCH_IN_SPEED_DEFAULT = 0.5; // may need to change + to -

	const std::string WINCH_OUT_SPEED_STRING = "WinchSystem::Winch out Speed ";
	const float WINCH_OUT_SPEED_DEFAULT = -0.5; // may need to change - to +

	const std::string WINCH_SETPOINT_STRING = "WinchSystem::Winch to point ";
	const int WINCH_SETPOINT_DEFAULT = 0; // starts the winch setpoint at default position

	// Variables for reding smart dashboard values
	float winchSwinchIn; // Winch In (no longer used)
	float winchSwinchOut; // Winch Out (no longer used)
};

#endif
