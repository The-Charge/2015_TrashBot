// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#ifndef LIFTXTICKS_H
#define LIFTXTICKS_H

#include "Commands/Subsystem.h"
#include "../Robot.h"

/**
 *

 * @author ExampleAuthor
 */
class LiftXTicks: public Command {
public:

	const int encoder_lift_ticks = 8192; // full encoder rotation
	const float total_lift_turns = 8.4; // how many rotations the ecoder must make to reach the desired height
	const int MAXLIFTTICKS = total_lift_turns * encoder_lift_ticks;

	const int LIFT_DEADBAND_DEFAULT = 1024; // 1/8 of the total ticks in one rotation of the encoder
	const int TICKS_LIFT_DEFAULT = 30000;
	const int SPEED_LIFT_DEFAULT = .2;


	int LIFT_ENCODER_TICKS = Robot::lift->encoder->Get();

	int deadbandlift = 0;
	float speed = 0;
	int ticks = 0;

	LiftXTicks(int t, float s);
	virtual void Initialize();
	virtual void Execute();
	virtual bool IsFinished();
	virtual void End();
	virtual void Interrupted();

};

#endif
