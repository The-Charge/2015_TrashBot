// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVE_H
#define DRIVE_H


#include "Commands/Subsystem.h"
#include "../Robot.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Drive: public Command {
	private:
	const std::string DELINEARIZATION_POWER_DASHBOARD_KEY="Drive::delinearizationPower";
	const std::string DELINEARIZATION_ALPHA_DASHBOARD_KEY="Drive::delinearizationAlpha";
	const std::string JOYSTICK_DEADBAND_DASHBOARD_KEY="Drive::joystickDeadband";
	const double DELINEARIZATION_ALPHA_DEFAULT=.8;
	const double DELINEARIZATION_POWER_DEFAULT=5;
	const double JOYSTICK_DEADBAND_DEFAULT=.2;

	const std:: string SCALEFACTOR_GYRO-DASHBOARD_KEY, SCALEFACTOR_DEFAULT;  // not right...
	SmartDashboard std::string GAINFACTOR_GYRO_DASHBOARD_KEY, GAINFACTOR_DEFAULT;  //not right...



	double joystickDeadband;
	double delinearizationPower;
	double delinearizationAlpha;
	float GainFactor;
	float ScaleFAcotr;

public:
	Drive();
	//float delinearize(float, float);
	//float deadband(float, float);
	virtual void Initialize();
	virtual void Execute();
	virtual bool IsFinished();
	virtual void End();
	virtual void Interrupted();
};

#endif
